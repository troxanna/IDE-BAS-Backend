# session.py
import ssl
from sqlalchemy.ext.asyncio import AsyncSession, create_async_engine
from sqlalchemy.orm import sessionmaker
from app.core.config import DB_URI  # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –±–µ—Ä—ë—Ç—Å—è –∏–∑ config.py

# –°–æ–∑–¥–∞—ë–º SSL-–∫–æ–Ω—Ç–µ–∫—Å—Ç
ssl_context = ssl.create_default_context()

# –ü–æ–¥–∫–ª—é—á–∞–µ–º –¥–≤–∏–∂–æ–∫ —Å SSL
engine = create_async_engine(
    DB_URI,
    echo=True,
    connect_args={"ssl": ssl_context}  # üëà –≤–∞–∂–Ω–æ
)

# –°–æ–∑–¥–∞—ë–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Å–µ—Å—Å–∏—é
AsyncSessionLocal = sessionmaker(
    bind=engine,
    class_=AsyncSession,
    autoflush=False,
    autocommit=False,
)

# Dependency –¥–ª—è FastAPI
async def get_db():
    async with AsyncSessionLocal() as session:
        yield session
